@import 'tailwindcss';

@layer base {
  :root {
    /* Fonts */
    --font-display: 'Manrope', sans-serif;
    --font-sans: 'Inter', sans-serif;
    --font-mono: 'Roboto Mono', monospace;

    /* Breakpoints */
    --breakpoint-3xl: 1920px;

    /* Theme Colors */
    --background: #000000;
    --foreground: #ffffff;

    /* Primary colors */
    --primary: #3b82f6; /* blue-500 */
    --primary-foreground: #ffffff;

    /* Secondary colors */
    --secondary: #6d28d9; /* purple-700 */
    --secondary-foreground: #ffffff;

    /* Accent colors */
    --accent: #10b981; /* emerald-500 */
    --accent-foreground: #ffffff;

    /* UI Colors */
    --muted: #374151; /* gray-700 */
    --muted-foreground: #9ca3af; /* gray-400 */

    --card: #111827; /* gray-900 */
    --card-foreground: #ffffff;

    --destructive: #ef4444; /* red-500 */
    --destructive-foreground: #ffffff;

    --border: #374151; /* gray-700 */
    --input: #374151; /* gray-700 */

    --ring: #2563eb; /* blue-600 */
    --ring-foreground: #ffffff;

    /* Animation Easings */
    --ease-fluid: cubic-bezier(0.3, 0, 0, 1);
    --ease-snappy: cubic-bezier(0.2, 0, 0, 1);

    /* Border Radius */
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;

    /* Shadows */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.25);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.3), 0 2px 4px -2px rgb(0 0 0 / 0.2);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.3), 0 4px 6px -4px rgb(0 0 0 / 0.2);

    /* Transitions */
    --transition-fast: 150ms;
    --transition-normal: 250ms;
    --transition-slow: 350ms;
    /* Button Theme Variables */
    /* These are the variables required by shadcn/ui Button component */
    --background: white;
    --foreground: var(--color-wood-900);

    --primary: var(--color-forest-500);
    --primary-foreground: white;

    --secondary: var(--color-bark-200);
    --secondary-foreground: var(--color-wood-900);

    --destructive: oklch(0.63 0.24 25.3); /* Red-500 equivalent */
    --destructive-foreground: white;

    --muted: var(--color-bark-100);
    --muted-foreground: var(--color-bark-500);

    --accent: var(--color-bark-200);
    --accent-foreground: var(--color-wood-900);

    --card: white;
    --card-foreground: var(--color-wood-900);

    --border: var(--color-bark-300);
    --input: var(--color-bark-300);

    --ring: var(--color-forest-500);
    --ring-offset-background: white;
  }
}

/* Base styles */
* {
  box-sizing: border-box;
}

html {
  font-size: 18px;
  line-height: 32px;
  background: var(--background);
  -webkit-font-smoothing: antialiased;
}

html,
body,
#app {
  height: 100%;
}

body {
  font-family: 'Inter', sans-serif;
  font-size: 18px;
  line-height: 32px;
  margin: 0;
  color: var(--foreground);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media (max-width: 1024px) {
  body {
    font-size: 15px;
    line-height: 24px;
  }
}
* Section styling */ section {
  position: relative;
  width: 100%;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  scroll-snap-align: start;
}

section > .section-content {
  width: 100%;
  max-width: 1280px; /* max-w-screen-xl */
  margin: 0 auto;
  padding: 0 1rem; /* px-4 */
}

@media (min-width: 768px) {
  section > .section-content {
    padding: 0 1.5rem; /* md:px-6 */
  }
}

@media (min-width: 1024px) {
  section > .section-content {
    padding: 0 2rem; /* lg:px-8 */
  }
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

main {
  height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch; /* for iOS momentum scrolling */
}

section {
  position: relative;
  width: 100%;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

a {
  color: currentColor;
}

a:focus {
  opacity: 0.8;
  outline: none;
}

a:active {
  opacity: 0.7;
  outline: none;
}

svg {
  vertical-align: middle;
}

/* Typography defaults */
h1 {
  margin: 40px 0;
  font-size: 64px;
  line-height: 70px;
  font-weight: bold;
}

@media (max-width: 1024px) {
  h1 {
    margin: 24px 0;
    font-size: 42px;
    line-height: 42px;
  }
}

@media (max-width: 768px) {
  h1 {
    font-size: 38px;
    line-height: 38px;
  }
}

@media (max-width: 400px) {
  h1 {
    font-size: 32px;
    line-height: 32px;
  }
}

h2 {
  margin: 24px 0;
  font-size: 32px;
  line-height: 38px;
}

@media (max-width: 1024px) {
  h2 {
    margin: 16px 0;
    font-size: 24px;
    line-height: 32px;
  }
}

@media (max-width: 768px) {
  h2 {
    font-size: 20px;
    line-height: 28px;
  }
}

@media (max-width: 400px) {
  h2 {
    font-size: 18px;
    line-height: 24px;
  }
}

h3 {
  margin: 16px 0;
  font-size: 24px;
  line-height: 32px;
}

@media (max-width: 1024px) {
  h3 {
    margin: 12px 0;
    font-size: 20px;
    line-height: 28px;
  }
}

@media (max-width: 768px) {
  h3 {
    font-size: 18px;
    line-height: 24px;
  }
}

@media (max-width: 400px) {
  h3 {
    font-size: 16px;
    line-height: 22px;
  }
}

p {
  margin: 24px 0;
}

@media (max-width: 1024px) {
  p {
    margin: 18px 0;
  }
}

/* Animation utilities */
@keyframes enter {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes exit {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.95);
  }
}

@keyframes slide-in-from-right {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slide-out-to-right {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(100%);
  }
}

@keyframes slide-in-from-left {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slide-out-to-left {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

@keyframes blob {
  0% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
  100% {
    transform: translate(0px, 0px) scale(1);
  }
}

@keyframes ping {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  75%,
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

.animate-blob {
  animation: blob 15s infinite alternate;
}

.animate-ping {
  animation: ping 2s cubic-bezier(0, 0, 0.2, 1) infinite;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}

.animation-delay-6000 {
  animation-delay: 6s;
}

.animate-in {
  animation: enter 0.2s ease-out;
}

.animate-out {
  animation: exit 0.2s ease-in;
}

.fade-in {
  animation: enter 0.2s ease-out;
}

.fade-out {
  animation: exit 0.2s ease-in;
}

.zoom-in-90 {
  animation: enter 0.2s ease-out;
}

.zoom-out-95 {
  animation: exit 0.2s ease-in;
}

.slide-in-from-right {
  animation: slide-in-from-right 0.3s ease-out;
}

.slide-out-to-right {
  animation: slide-out-to-right 0.3s ease-in;
}

.slide-in-from-left {
  animation: slide-in-from-left 0.3s ease-out;
}

.slide-out-to-left {
  animation: slide-out-to-left 0.3s ease-in;
}

/* Data state animation classes */
.data-\[state\=open\]\:animate-in[data-state='open'] {
  animation: enter 0.2s ease-out;
}

.data-\[state\=closed\]\:animate-out[data-state='closed'] {
  animation: exit 0.2s ease-in;
}

.data-\[state\=open\]\:fade-in[data-state='open'] {
  animation: enter 0.2s ease-out;
}

.data-\[state\=closed\]\:fade-out[data-state='closed'] {
  animation: exit 0.2s ease-in;
}

.data-\[state\=open\]\:zoom-in-90[data-state='open'] {
  animation: enter 0.2s ease-out;
}

.data-\[state\=closed\]\:zoom-out-95[data-state='closed'] {
  animation: exit 0.2s ease-in;
}

/* Background decorations */
.background-decoration {
  position: fixed; /* Changed from absolute to fixed */
  inset: 0;
  z-index: 0; /* Changed from -10 to 0 */
  pointer-events: none;
  overflow: hidden;
}

.background-decoration .blob {
  position: absolute;
  border-radius: 100%;
  filter: blur(40px);
  opacity: 0.3; /* Increased opacity */
}

.background-decoration .blob-1 {
  top: 5%;
  left: 5%;
  width: 35vw;
  height: 35vw;
  background: linear-gradient(to bottom right, #3b82f6, #10b981); /* Blue to emerald */
  animation: blob 20s infinite alternate;
}

.background-decoration .blob-2 {
  bottom: 5%;
  right: 5%;
  width: 30vw;
  height: 30vw;
  background: linear-gradient(to bottom left, #7c3aed, #ec4899); /* Purple to pink */
  animation: blob 25s infinite alternate-reverse;
  animation-delay: 2s;
}

.background-decoration .blob-3 {
  top: 40%;
  right: 25%;
  width: 25vw;
  height: 25vw;
  background: linear-gradient(to top right, #10b981, #3b82f6); /* Emerald to blue */
  animation: blob 30s infinite alternate;
  animation-delay: 4s;
}

.background-decoration .grid-pattern {
  position: absolute;
  inset: 0;
  background-image:
    linear-gradient(to right, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 24px 24px;
  mask-image: radial-gradient(ellipse 80% 80% at 50% 50%, black 20%, transparent 100%);
}

.background-decoration .dot {
  position: absolute;
  border-radius: 50%;
}

.background-decoration .dot-1 {
  top: 25%;
  right: 25%;
  width: 8px;
  height: 8px;
  background: #3b82f6; /* blue-500 */
  animation: ping 3s cubic-bezier(0, 0, 0.2, 1) infinite;
}

.background-decoration .dot-2 {
  bottom: 33%;
  left: 25%;
  width: 6px;
  height: 6px;
  background: #10b981; /* emerald-500 */
  animation: ping 3s cubic-bezier(0, 0, 0.2, 1) infinite;
  animation-delay: 1.5s;
}

/* Custom utility classes */
@layer utilities {
  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .hover\:bg-primary\/90:hover {
    @media (hover: hover) {
      background-color: rgba(59, 130, 246, 0.9); /* blue-500 with 90% opacity */
    }
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .hover\:bg-secondary\/80:hover {
    @media (hover: hover) {
      background-color: rgba(109, 40, 217, 0.8); /* purple-700 with 80% opacity */
    }
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .text-destructive-foreground {
    color: var(--destructive-foreground);
  }

  .hover\:bg-destructive\/90:hover {
    @media (hover: hover) {
      background-color: rgba(239, 68, 68, 0.9); /* red-500 with 90% opacity */
    }
  }

  .border-secondary-foreground {
    border-color: var(--secondary-foreground);
  }

  .ring-ring {
    --tw-ring-color: var(--ring);
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }

  .bg-popover {
    background-color: var(--card);
  }

  .text-popover-foreground {
    color: var(--card-foreground);
  }
}
