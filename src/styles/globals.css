@import 'tailwindcss';

@layer theme {
  :root {
    /* Fonts */
    --font-display: 'Satoshi', 'sans-serif';
    --font-sans: 'Inter', 'sans-serif';

    /* Breakpoints */
    --breakpoint-3xl: 1920px;

    /* Wood Theme Colors */
    --color-wood-100: oklch(0.97 0.03 83.4);
    --color-wood-200: oklch(0.93 0.06 79.2);
    --color-wood-300: oklch(0.88 0.09 76.5);
    --color-wood-400: oklch(0.82 0.12 72.1);
    --color-wood-500: oklch(0.76 0.15 68.3);
    --color-wood-600: oklch(0.65 0.13 66.7);
    --color-wood-700: oklch(0.55 0.11 65.9);
    --color-wood-800: oklch(0.45 0.09 65.3);
    --color-wood-900: oklch(0.35 0.07 64.8);

    /* Accent Colors */
    --color-forest-500: oklch(0.65 0.15 142.5);
    --color-forest-600: oklch(0.55 0.12 143.2);

    /* Neutral Colors */
    --color-bark-100: oklch(0.98 0.01 90);
    --color-bark-200: oklch(0.92 0.02 89.5);
    --color-bark-300: oklch(0.85 0.03 89);
    --color-bark-400: oklch(0.75 0.04 88.5);
    --color-bark-500: oklch(0.6 0.05 88);

    /* Animation Easings */
    --ease-fluid: cubic-bezier(0.3, 0, 0, 1);
    --ease-snappy: cubic-bezier(0.2, 0, 0, 1);

    /* Border Radius */
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;

    /* Shadows */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);

    /* Transitions */
    --transition-fast: 150ms;
    --transition-normal: 250ms;
    --transition-slow: 350ms;

    /* Button Theme Variables */
    /* These are the variables required by shadcn/ui Button component */
    --background: white;
    --foreground: var(--color-wood-900);

    --primary: var(--color-forest-500);
    --primary-foreground: white;

    --secondary: var(--color-bark-200);
    --secondary-foreground: var(--color-wood-900);

    --destructive: oklch(0.63 0.24 25.3); /* Red-500 equivalent */
    --destructive-foreground: white;

    --muted: var(--color-bark-100);
    --muted-foreground: var(--color-bark-500);

    --accent: var(--color-bark-200);
    --accent-foreground: var(--color-wood-900);

    --card: white;
    --card-foreground: var(--color-wood-900);

    --border: var(--color-bark-300);
    --input: var(--color-bark-300);

    --ring: var(--color-forest-500);
    --ring-offset-background: white;
  }
}

/* Add this additional utility classes section if your Tailwind doesn't generate these */
@layer utilities {
  /* Only add these if you confirm they're not already in your compiled Tailwind CSS */
  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .hover\:bg-primary\/90:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, var(--primary) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .hover\:bg-secondary\/80:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, var(--secondary) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .text-destructive-foreground {
    color: var(--destructive-foreground);
  }

  .hover\:bg-destructive\/90:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, var(--destructive) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  .border-secondary-foreground {
    border-color: var(--secondary-foreground);
  }

  .ring-ring {
    --tw-ring-color: var(--ring);
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--ring-offset-background);
  }
  /* Add these animation utilities to your global CSS */
  @layer utilities {
    /* Animation utilities for keyframes */
    @keyframes enter {
      from {
        opacity: 0;
        transform: scale(0.95);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    @keyframes exit {
      from {
        opacity: 1;
        transform: scale(1);
      }
      to {
        opacity: 0;
        transform: scale(0.95);
      }
    }

    @keyframes slide-in-from-right {
      from {
        transform: translateX(100%);
      }
      to {
        transform: translateX(0);
      }
    }

    @keyframes slide-out-to-right {
      from {
        transform: translateX(0);
      }
      to {
        transform: translateX(100%);
      }
    }

    @keyframes slide-in-from-left {
      from {
        transform: translateX(-100%);
      }
      to {
        transform: translateX(0);
      }
    }

    @keyframes slide-out-to-left {
      from {
        transform: translateX(0);
      }
      to {
        transform: translateX(-100%);
      }
    }

    /* Animation utility classes */
    .animate-in {
      animation: enter 0.2s ease-out;
    }

    .animate-out {
      animation: exit 0.2s ease-in;
    }

    .fade-in {
      animation: enter 0.2s ease-out;
    }

    .fade-out {
      animation: exit 0.2s ease-in;
    }

    .zoom-in-90 {
      animation: enter 0.2s ease-out;
    }

    .zoom-out-95 {
      animation: exit 0.2s ease-in;
    }

    .slide-in-from-right {
      animation: slide-in-from-right 0.3s ease-out;
    }

    .slide-out-to-right {
      animation: slide-out-to-right 0.3s ease-in;
    }

    .slide-in-from-left {
      animation: slide-in-from-left 0.3s ease-out;
    }

    .slide-out-to-left {
      animation: slide-out-to-left 0.3s ease-in;
    }

    /* Data state animation classes */
    .data-\[state\=open\]\:animate-in[data-state='open'] {
      animation: enter 0.2s ease-out;
    }

    .data-\[state\=closed\]\:animate-out[data-state='closed'] {
      animation: exit 0.2s ease-in;
    }

    .data-\[state\=open\]\:fade-in[data-state='open'] {
      animation: enter 0.2s ease-out;
    }

    .data-\[state\=closed\]\:fade-out[data-state='closed'] {
      animation: exit 0.2s ease-in;
    }

    .data-\[state\=open\]\:zoom-in-90[data-state='open'] {
      animation: enter 0.2s ease-out;
    }

    .data-\[state\=closed\]\:zoom-out-95[data-state='closed'] {
      animation: exit 0.2s ease-in;
    }

    /* Background and z-index utilities */
    .bg-popover {
      background-color: white;
    }

    .text-popover-foreground {
      color: var(--color-wood-900, #333);
    }
  }
}
